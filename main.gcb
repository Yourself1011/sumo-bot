#chip 16f628a

#define RMB PortB.0
#define RMF PortB.1
#define LMF PortB.2
#define LMB PortB.3

#define RBD PortA.0
#define RLD PortA.1
#define LLD PortA.2
#define LBD PortA.3

dir RMF out
dir RMB out
dir LMB out
dir LMF out

dir RBD in
dir RLD in
dir LLD in
dir LBD in

InitTimer1 Osc, PS0_16
setTimer 1, 0
startTimer 1

on interrupt Timer1Overflow call timerOverflow

' 0 - normal move forward/attack botState
' 1 - turning LFT from line
' 2 - turning RGHT from line
dim botState as byte
dim overflow as byte
botState = 0
overflow = 0

wait 5000 ms

do
    if RLD = 0 then
        goSub BACK
        botState = 2
        wait 500 ms
        clearTimer 1
        overflow = 0
        goSub LFT
        // wait 1000 ms
    else if LLD = 0 then
        goSub BACK
        botState = 1
        wait 500 ms
        clearTimer 1
        overflow = 0
        goSub RGHT
        // wait 1000 ms
    else if (RBD = 1) and (LBD = 1) then
        if botState = 0 then
            goSub FWD
        else if overflow > 128 then 'change this to change turn amount
            botState = 0
            overflow = 0
            goSub FWD
        else if botState = 1 then
            goSub LFT
        else if botState = 2 then
            goSub RGHT
        end if

    else if (RBD = 0) and (LBD = 0) then
        goSub FWD
    else if RBD = 0 then
        goSub FL
    else if LBD = 0 then
        goSub FR
    end if
    // overflow = overflow + 1
loop

sub timerOverflow
    overflow = overflow + 1
end sub

sub FWD
    RMF = ON
    RMB = OFF
    LMF = ON
    LMB = OFF
end sub

sub FR
    RMF = OFF
    RMB = OFF
    LMF = ON
    LMB = OFF
end sub

sub FL
    RMF = ON
    RMB = OFF
    LMF = OFF
    LMB = OFF
end sub

sub BACK
    RMF = OFF
    RMB = ON
    LMF = OFF
    LMB = ON
end sub

sub LFT
    RMF = OFF
    RMB = ON
    LMF = ON
    LMB = OFF
end sub

sub RGHT
    RMF = ON
    RMB = OFF
    LMF = OFF
    LMB = ON
end sub