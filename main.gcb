#chip 16f628a

#define LMB PortB.0
#define LMF PortB.1
#define RMF PortB.2
#define RMB PortB.3

#define RBD PortA.0
#define RLD PortA.1
#define LLD PortA.2
#define LBD PortA.3

#define BTN PortA.4

dir RMF out
dir RMB out
dir LMB out
dir LMF out

dir RBD in
dir RLD in
dir LLD in
dir LBD in

dir BTN in

InitTimer0 Osc, PS0_4
setTimer 0, 0
startTimer 1

on interrupt Timer0Overflow call timerOverflow

' 0 - normal move forward/attack botState
' 1 - turning LFT from line
' 2 - turning RGHT from line
dim botState as byte
dim overflow as word
dim presses as byte
dim pressed as bit
botState = 0
overflow = 0
presses = 0
pressed = 0

RMF = OFF
RMB = OFF
LMF = OFF
LMB = OFF

' wait 5 s

' if (SW1 = 0) and (SW2 = 1) then
'     goSub RGHT
'     wait 1000 ms
' else if (SW1 = 0) and (SW2 = 0) then
'     goSub RGHT
'     wait 500 ms
' else if (SW1 = 1) and (SW2 = 0) then
'     goSub LFT
'     wait 500 ms
' end if

do until overflow > 5000
    if (BTN = 1) and (pressed = 0) then
        pressed = 1
        presses = presses + 1
    else if (BTN = 0) then
        pressed = 0
    end if
loop

overflow = 0

if presses = 0 then
    goSub RGHT
    wait 650 ms
else if presses = 1 then
    goSub LFT
    wait 650 ms
else
    goSub RGHT
    wait 1300 ms
end if

do
    if (RBD = 1) and (LBD = 1) then
        if RLD = 0 then
            goSub BACK
            botState = 1
            wait 500 ms
            clearTimer 0
            overflow = 0
            goSub LFT
        else if LLD = 0 then
            goSub BACK
            botState = 2
            wait 500 ms
            clearTimer 0
            overflow = 0
            goSub RGHT
        else if botState = 0 then
            goSub FWD
        else if overflow > 1000 then 'change this to change turn amount
            botState = 0
            overflow = 0
            goSub FWD
        else if botState = 1 then
            goSub LFT
        else if botState = 2 then
            goSub RGHT
        end if

    else if (RBD = 0) and (LBD = 0) then
        goSub FWD
    else if RBD = 0 then
        goSub FL
    else if LBD = 0 then
        goSub FR
    end if
    // overflow = overflow + 1
loop

sub timerOverflow
    overflow = overflow + 1
end sub

sub FWD
    RMF = ON
    RMB = OFF
    LMF = ON
    LMB = OFF
end sub

sub FR
    RMF = OFF
    RMB = OFF
    LMF = ON
    LMB = OFF
end sub

sub FL
    RMF = ON
    RMB = OFF
    LMF = OFF
    LMB = OFF
end sub

sub BACK
    RMF = OFF
    RMB = ON
    LMF = OFF
    LMB = ON
end sub

sub LFT
    RMF = OFF
    RMB = ON
    LMF = ON
    LMB = OFF
end sub

sub RGHT
    RMF = ON
    RMB = OFF
    LMF = OFF
    LMB = ON
end sub